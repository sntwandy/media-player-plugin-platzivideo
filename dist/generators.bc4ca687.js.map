{"version":3,"sources":["exercises/generators.js"],"names":["simpleGenerator","idMaker","idMakerWithReset","fibonacci","console","log","gen","next","id","genId","reset","a","b","nextNumber","gen3"],"mappings":"mDAAUA;oDAWAC;oDAWAC;oDAcAC;;AApCV,SAAUH,eAAV;AAAA;AAAA;AAAA;AAAA;AACII,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AADJ;AAEI;;AAFJ;AAGID,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIC;AAED,IAAMC,GAAG,GAAGN,eAAe,EAA3B;AAEAM,GAAG,CAACC,IAAJ;AACAD,GAAG,CAACC,IAAJ;;AAEA,SAAUN,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACQO,UAAAA,EADR,GACa,CADb;;AAAA;AAAA,eAEU,IAFV;AAAA;AAAA;AAAA;;AAAA;AAGQ,iBAAMA,EAAN;;AAHR;AAIQA,UAAAA,EAAE;AAJV;AAAA;;AAAA;AAKK;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMC;AAED,IAAMC,KAAK,GAAGR,OAAO,EAArB;;AAGA,SAAUC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACQM,UAAAA,EADR,GACa,CADb;;AAAA;AAAA,eAGU,IAHV;AAAA;AAAA;AAAA;;AAAA;AAIgB,iBAAMA,EAAN;;AAJhB;AAIQE,UAAAA,KAJR;;AAKQ,cAAGA,KAAH,EAAU;AACNF,YAAAA,EAAE,GAAG,CAAL;AACH,WAFD,MAEO;AACHA,YAAAA,EAAE;AACL;;AATT;AAAA;;AAAA;AAUK;;AAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWC;;AAGD,SAAUL,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACQQ,UAAAA,CADR,GACY,CADZ;AAEQC,UAAAA,CAFR,GAEY,CAFZ;;AAAA;AAAA,eAIU,IAJV;AAAA;AAAA;AAAA;;AAKcC,UAAAA,UALd,GAK2BF,CAAC,GAAGC,CAL/B;AAMQD,UAAAA,CAAC,GAAGC,CAAJ;AACAA,UAAAA,CAAC,GAAGC,UAAJ;AAPR;AAQQ,iBAAMA,UAAN;;AARR;AAAA;AAAA;;AAAA;AASK;;AATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUC;AAED,IAAMC,IAAI,GAAGX,SAAS,EAAtB","file":"generators.bc4ca687.js","sourceRoot":"..","sourcesContent":["function* simpleGenerator() {\n    console.log('Generator Start');\n    yield;\n    console.log('Generator End');\n};\n\nconst gen = simpleGenerator();\n\ngen.next();\ngen.next();\n\nfunction* idMaker() {\n    let id = 1;\n    while(true) {\n        yield id;\n        id++;\n    };\n};\n\nconst genId = idMaker();\n\n\nfunction* idMakerWithReset() {\n    let id = 1;\n    let reset;\n    while(true) {\n        reset = yield id;\n        if(reset) {\n            id = 1;\n        } else {\n            id++;\n        }\n    };\n};\n\n\nfunction* fibonacci() {\n    let a = 1;\n    let b = 1;\n\n    while(true) {\n        const nextNumber = a + b;\n        a = b;\n        b = nextNumber;\n        yield nextNumber;\n    };\n};\n\nconst gen3 = fibonacci();"]}