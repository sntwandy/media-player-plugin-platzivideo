{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","mute","unmute","AutoPlay","AutoPause","threshold","handlerIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","play_pause_btn","getElementById","mute_unmute_btn","onclick","paused","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":"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","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer (config) {\n    this.media = config.el;\n    this.plugins = config.plugins || [];\n\n    this._initPlugins();\n};\n\nMediaPlayer.prototype._initPlugins = function () {\n    const player = {\n        play: () => this.play(),\n        pause: () => this.pause(),\n        media: this.media,\n        get muted() {\n            return this.media.muted;\n        },\n        set muted(value) {\n            this.media.muted = value;\n        },\n    };\n\n    this.plugins.forEach(plugin => {\n        plugin.run(player);\n    });\n};\n\nMediaPlayer.prototype.play = function () {\n    this.media.play();\n};\n\nMediaPlayer.prototype.pause = function () {\n    this.media.pause();\n};\n\nMediaPlayer.prototype.mute = function () {\n    this.media.muted = true;\n};\n\nMediaPlayer.prototype.unmute = function () {\n    this.media.muted = false;\n}\n\nexport default MediaPlayer;","function AutoPlay () {};\n\nAutoPlay.prototype.run = function (player) {\n    if (!player.muted) {\n        player.muted = true;\n    }\n    player.play();\n};\n\nexport default AutoPlay;","class AutoPause {\n    constructor() {\n        this.threshold = 0.25;\n        this.handlerIntersection = this.handlerIntersection.bind(this);\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    }\n\n    run(player){\n        this.player = player;\n        const observer = new IntersectionObserver(this.handlerIntersection, {\n            threshold: this.threshold,\n        });\n        observer.observe(this.player.media);\n\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\n    };\n    handlerIntersection(entries) {\n        const entry = entries[0];\n\n        const isVisible = entry.intersectionRatio > this.threshold;\n\n        if(isVisible) {\n            this.player.play();\n        } else {\n            this.player.pause();\n        }\n    };\n\n    handleVisibilityChange() {\n        const isVisible = document.visibilityState === \"visible\";\n\n        if(isVisible) {\n            this.player.play();\n        } else {\n            this.player.pause();\n        }\n    }\n};\n\nexport default AutoPause;","import MediaPlayer from './MediaPlayer.js';\nimport AutoPlay from './plugins/AutoPlay.js';\nimport AutoPause from './plugins/AutoPause.js';\n\nconst video = document.querySelector(\"video\");\nconst play_pause_btn = document.getElementById(\"play-pause-btn\");\nconst mute_unmute_btn = document.getElementById(\"mute-unmute-btn\");\n\nconst media = new MediaPlayer({ el: video  ,plugins: [new AutoPlay(), new AutoPause()]});\n\nplay_pause_btn.onclick = () => {\n    (video.paused) ? media.play() : media.pause();\n};\n\nmute_unmute_btn.onclick = () => {\n    (video.muted) ? media.unmute() : media.mute();\n};\n\nif('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('/sw.js').catch(error => console.log(error.message));\n};"]}